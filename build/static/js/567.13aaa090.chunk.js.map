{"version":3,"file":"static/js/567.13aaa090.chunk.js","mappings":"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","sources":["components/itapComponents copy/UsersTable/UsersTable.js","pages/AdminPage/AdminPage.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { TableRow } from \"@mui/material\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport defaultURL from \"../../../data/baseURL\";\n\nconst baseURL = \"/main\"\n\nexport default class UsersTable extends Component {\n    state = {\n        value: \"\",\n        users: [],\n    }\n\n    componentDidMount() {\n        const userSession = JSON.parse(localStorage.getItem(\"user\"))\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + userSession.accessToken\n        axios.get(`${defaultURL}${baseURL}/getusers`)\n            .then(res => {\n            const users = res.data;\n            this.setState({ users });\n            // console.log(res.data)\n        })\n    }\n\n    setActive(userEvent, selectEvent) {\n        console.log(userEvent, selectEvent)\n        // /admin/user/ban/{id}\n        axios.post(`${defaultURL}${baseURL}/admin/user/ban/`+userEvent.id)\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    active(e) {\n        if (e.active) {\n            return (<TableCell align=\"right\" className=\"finished\">\n                        <select onChange={event => this.setActive(e, event)}>\n                            <option selected>Активен</option>\n                            <option>Не Активен</option>\n                        </select>\n                    </TableCell>)\n        } else {\n            return (<TableCell align=\"right\" className=\"unfinished\">\n                        <select onChange={event => this.setActive(e, event)}>\n                            <option>Активен</option>\n                            <option selected>Не Активен</option>\n                        </select>\n                    </TableCell>)\n        }\n    }\n\n    search = async val => {\n        axios\n            .get(`${baseURL}/admin/users`, {params: {value: val}})\n            .then(res => {\n                const users = res.data;\n                this.setState({ users });\n            })\n    }\n    onChangeHandler = async e => {\n        this.search(e.target.value)\n        this.state.value = e.target.value\n    }\n\n    render() {\n        return(\n            <>\n            <input value={this.state.value} onChange={e=> this.onChangeHandler(e)} type=\"text\" className=\"searchUsers\" placeholder=\"Поиск пользователей\"></input>\n                <TableContainer>\n                        <Table className=\"table adminPanelTable uitable\">\n                            <TableHead>\n                            <TableRow className=\"uitableHead\">\n                                <TableCell style={{ width: '5%' }}><a>#</a></TableCell>\n                                <TableCell style={{ width: '20%' }}><a>Почта</a></TableCell>\n                                <TableCell style={{ width: 100 }}><a>ФИО</a></TableCell>\n                                <TableCell align=\"right\"><a>Статус активности</a></TableCell>\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.users.map((row, index) => (\n                                <TableRow hover>\n                                    <TableCell><a>{index+1}</a></TableCell>\n                                    <TableCell style={{ width: '20%' }}><Link className=\"rowInfo\" to={{\n                                        pathname:`/users/${row.username}`, \n                                        state: {user: row}\n                                    }}>{row.username}</Link></TableCell>\n                                    <TableCell><a>{row.email}</a></TableCell>\n                                    {this.active(row)}\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                </TableContainer>\n            </>\n            )\n    }\n}","import axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\n\nimport SideBar from '../../components/side-bar';\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport UsersTable from \"../../components/itapComponents copy/UsersTable/UsersTable\";\nimport './AdminPage.css';\n\nconst baseURL = \"http://10.202.20.92:8081/api/pandora/main\"\n\nconst AdminPage = (props) => {\n    const userSession = JSON.parse(localStorage.getItem(\"user\"))\n    const navigate = useNavigate()    \n\n    const [users, setUsers] = useState(0)\n    const [logs, setLogs] = useState(0)\n    const [todayLogs, setTodayLogs] = useState(0)\n\n    const location = useLocation()\n\n    useEffect(() => {\n        const a = !userSession.roles.includes(\"ADMIN\") ? navigate('/') : \"\"\n\n        axios.get(`${baseURL}/general`)\n        .then(res => {\n            setUsers(res.data.userNumber)\n            setLogs(res.data.allLogsNum)\n            setTodayLogs(res.data.todayRequests)\n            // console.log(this.location)\n        })\n    })\n\n    return (\n        <div className={'adminPage'} style={{display: 'flex', flexDirection: 'row'}}>\n            <SideBar/>\n            <section>\n                <div className=\"countStats\">\n                    <div className=\"lastQuery\">\n                        <div>Количество пользователей</div>\n                        <div>{users}</div>\n                    </div>\n\n                    <div>\n                        <div>Количество запросов</div>\n                        <div>{logs}</div>\n                    </div>\n\n                    <div>\n                        <div>Количество запросов за сегодня</div>\n                        <div>{todayLogs}</div>\n                    </div>\n                </div>\n                <div>\n                    <UsersTable></UsersTable>\n                </div>\n                <div className=\"footer\"></div>\n            </section>\n        </div>\n\n    );\n}\n\nexport default AdminPage;"],"names":["baseURL","UsersTable","Component","constructor","arguments","state","value","users","search","async","axios","get","concat","params","val","then","res","data","this","setState","onChangeHandler","e","target","componentDidMount","userSession","JSON","parse","localStorage","getItem","defaults","headers","common","accessToken","defaultURL","setActive","userEvent","selectEvent","console","log","post","id","response","catch","error","active","_jsx","TableCell","align","className","children","_jsxs","onChange","event","selected","render","_Fragment","type","placeholder","TableContainer","Table","TableHead","TableRow","style","width","TableBody","map","row","index","hover","Link","to","pathname","username","user","email","props","navigate","useNavigate","setUsers","useState","logs","setLogs","todayLogs","setTodayLogs","useLocation","useEffect","roles","includes","userNumber","allLogsNum","todayRequests","display","flexDirection","SideBar"],"sourceRoot":""}