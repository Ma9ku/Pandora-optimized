{"version":3,"file":"static/js/849.4979be0c.chunk.js","mappings":"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","sources":["components/itapComponents copy/RegisterForm/RegisterForm.js","pages/Registration/RegistrationPage.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport { Button } from \"@mui/material\";\nimport './RegisterForm.css'\n\nimport authService from \"../../../services/auth.service\";\n\nconst RegisterForm = () => {\n    const navigate = useNavigate();\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors }\n    } = useForm({\n        defaultValues: {\n            username: \"\",\n            email: \"\",\n            level: \"\",\n            password: \"\",\n            password_conf: \"\",\n            fio: \"\",\n        }\n    });\n    const handleRegistration = (data) => {\n        console.log(data);\n        authService.register(\n            data.username,\n            data.email,\n            data.fio,\n            data.password,\n            data.level,\n        ).then(\n            response => {\n                console.log(response)\n                navigate('/login', { replace: true });\n            },\n            error => {\n                console.log(error)\n            }\n        );\n    }\n    const handleErrors = (errors) => {\n        console.log(errors)\n    }\n\n    const registerOptions = {\n        username: {\n            required: \"Username is required\",\n            minLength: {\n                value: 1,\n                message: \"Minimum length is 1\"\n            }\n        },\n        email: {\n            required: \"Email is required\",\n            validate: (val) => {\n                if (val.length < 1) {\n                    return \"Email is invalid\"\n                }\n            }\n        },\n        fio: {\n            required: \"ФИО обязательна\",\n            validate: (val) => {\n                if (val.length < 4) {\n                    return \"Не менее 4 символов в ФИО\"\n                }\n            }\n        },\n        level: {\n            required: \"Level is required. Please choose уровень доступа\"\n        },\n        password: {\n            required: \"Password is required\",\n            minLength: {\n                value: 1,\n                message: \"Password must have at least 1 characters\"\n            }\n        },\n        password_conf: {\n            required: \"Password confirmation is required\",\n            validate: (val) => {\n                if(watch('password') != val) {\n                    return \"Your passwords do not match\"\n                }\n            },\n        },\n        // user_photo: {\n        //     required: \"userphoto is required\",\n        //     minLength: {\n        //         value: 1,\n        //         message: \"userphoto\"\n        //     }\n        // }\n    };\n\n    return (\n        <div>\n            <form name=\"registrationForm\" onSubmit={handleSubmit(handleRegistration, handleErrors)} enctype=\"multipart/form-data\">\n\n                <div className=\"inputs\">\n                    <div className=\"firstLine\">\n                        <div>\n                            <label >ФИО</label>\n                            <input\n                                style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}}\n                                type=\"text\"\n                                {...register(\"username\", registerOptions.username)}\n                                id=\"username\" placeholder=\"Введите ФИО\"\n                            />\n                        </div>\n\n                        <div>\n                            <label >Уровень доступа</label>\n                            <div className=\"level\">\n                                <select style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}} {...register(\"level\", registerOptions.level)} id='level'>\n                                    <option value=\"\" disabled selected>Выбрать уровень доступа</option>\n                                    <option value=\"admin\">Admin</option>\n                                    <option value=\"vip\">Vip</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                </select>\n                            </div>\n\n                        </div>\n                    </div>\n\n                    <div className=\"secondLine\">\n\n\n                        <div>\n                            <label >Почта</label>\n                            <input\n                                style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}}\n                                type=\"text\"\n                                {...register(\"email\", registerOptions.email)}\n                                id=\"email\" placeholder=\"Введите почту\"\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"secondLine\">\n                        <div>\n                            <label>Пароль</label>\n                            <input style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}} type=\"password\" {...register(\"password\", registerOptions.password)} id=\"password\" placeholder=\"Введите пароль\"/>\n                        </div>\n                    </div>\n\n                    <div className=\"thirdLine\">\n                        <div>\n                            <label >Подтверждение пароля</label>\n                            <input style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}} type=\"password\" {...register(\"password_conf\", registerOptions.password_conf)} id=\"password-conf\" placeholder=\"Подтвердите пароль\" />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"actions\">\n                    {/* <Link to='/login'><a>Войти в аккаунт</a></Link> */}\n                    <Button type=\"button\" value=\"Очистить\" >Очистить</Button>\n                    <Button variant=\"outlined\" type=\"submit\" value=\"Зарегистрировать\" >Зарегистрировать</Button>\n                </div>\n\n                {\n                    Object.keys(errors).length != 0 ?\n                    <div className=\"errorsBlock\">\n                        <div className=\"title\">Invalid Registration</div>\n                        <div className=\"errors\">\n                            {errors.username ? <span>{errors.username?.message}</span> : \"\"}\n                            {errors.email ? <span>{errors.email?.message}</span> : \"\"}\n                            {errors.fio ? <span>{errors.fio?.message}</span> : \"\"}\n                            {errors.level ? <span>{errors.level?.message}</span> : \"\"}\n                            {errors.password ? <span>{errors.password?.message}</span>: \"\"}\n                            {errors.password_conf ? <span>{errors.password_conf?.message}</span> : \"\"}\n                            {/*{errors.user_photo ? <span>{errors.user_photo?.message}</span> : \"\"}*/}\n                        </div>\n                    </div> \n                    : \"\"\n                }\n            </form>\n        </div>\n    );\n};\n\nexport default RegisterForm;","import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from 'react-router-dom'\n\nimport './RegistrationPage.css'\nimport { useForm } from \"react-hook-form\"\n\nimport RegisterForm from \"../../components/itapComponents copy/RegisterForm/RegisterForm\";\nimport SideBar from \"../../components/side-bar\";\n\nexport default class RegistrationPage extends Component {\n    render() {\n        return (\n            <section>\n                <div className=\"title\">\n                    <div>Регистрация</div>\n                </div>\n\n                <RegisterForm></RegisterForm>\n            </section>\n        )\n    }\n}"],"names":["RegisterForm","_errors$username","_errors$email","_errors$fio","_errors$level","_errors$password","_errors$password_conf","navigate","useNavigate","register","handleSubmit","watch","formState","errors","useForm","defaultValues","username","email","level","password","password_conf","fio","registerOptions","required","minLength","value","message","validate","val","length","_jsx","children","_jsxs","name","onSubmit","data","console","log","authService","then","response","replace","error","enctype","className","style","backgroundColor","color","type","id","placeholder","disabled","selected","Button","variant","Object","keys","RegistrationPage","Component","render"],"sourceRoot":""}