{"version":3,"file":"static/js/415.1c32b22d.chunk.js","mappings":"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","sources":["components/itapComponents copy/SignInForm/SignInForm.js","pages/SignIn/SignInPage.js"],"sourcesContent":["import Button from '@mui/material/Button';\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport './SignInForm.css';\n\nimport authService from \"../../../services/auth.service\";\n\nconst SignInForm = ({error, setError}) => {\n    const navigate = useNavigate();\n\n    const { \n        register, \n        handleSubmit, \n        watch,\n        formState: { errors } \n    } = useForm({\n        defaultValues: {\n            username: \"\",\n            password: \"\"\n        }\n    });\n    const handleLogin = (data) => {\n        console.log(data);\n        authService.login(\n            data.username,\n            data.password\n        ).then(\n            response => {\n                console.log(response)\n                navigate('/');\n            },\n            error => {\n                console.log(error)\n                if (error.request.response.status == 401) {\n                    setError(\"Некорректное имя пользователя или пароль\")\n                } else {\n                    setError(\"Нейзвестная ошибка\")\n                }\n            }\n        );\n    }\n    const handleErrors = (errors) => {\n        console.log(errors)\n    }\n\n    const loginOptions = {\n        username: { \n            required: \"Зполните логин\", \n            minLength: {\n                value: 1,\n                message: \"Minimum length is 1\"\n            }\n        },\n        password: {\n            required: \"Password is required\",\n            minLength: {\n                value: 1,\n                message: \"Password must have at least 1 characters\"\n            }\n        }\n    };\n\n    return (\n        <div>\n            <form name=\"loginForm\" onSubmit={handleSubmit(handleLogin, handleErrors)}>\n\n                <div className=\"inputs\">\n                    <div className=\"\">\n                        <div>\n                            <label >Логин</label>\n                            <input\n                                style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}} \n                                type=\"text\" \n                                {...register(\"username\", loginOptions.username)} \n                                id=\"username\" placeholder=\"Введите логин\" \n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"secondLine\">\n                        <div>\n                            <label>Пароль</label>\n                            <input style={{backgroundColor: \"rgba(153, 153, 153, 0.7)\", color: 'black'}} type=\"password\" {...register(\"password\", loginOptions.password)} id=\"password\" placeholder=\"Введите пароль\"/>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"actions\">\n                    {/* <Link to='/registration'><a>Нет аккаунта</a></Link> */}\n                    {/* <input id=\"clear\" type=\"button\" value=\"Очистить\"/> */}\n                    <Button type=\"button\" value=\"Очистить\">Очистить</Button>\n                    <Button type=\"submit\" onClick={handleSubmit(handleLogin, handleErrors)}value=\"Войти\">Войти</Button>\n                </div>\n\n                {/* {\n                    Object.keys(errors).length != 0 ?\n                    <div className=\"errorsBlock\">\n                        <div className=\"title\">Invalid Sign in</div>\n                        <div className=\"errors\">\n                            {errors.username ? <span>{errors.username?.message}</span> : \"\"}\n                            {errors.password ? <span>{errors.password?.message}</span>: \"\"}\n                        </div>\n                    </div> \n                    : \"\"\n                } */}\n            </form>\n        </div>\n    );\n};\n\nexport default SignInForm;","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport backVideo from './../mainPage/backgroundVideo.mp4';\n\nimport SignInForm from \"../../components/itapComponents copy/SignInForm/SignInForm\";\nimport './SignInPage.css';\n\nconst SignInPage = () => {\n    const userSession = JSON.parse(localStorage.getItem(\"user\"))\n    const navigate = useNavigate()\n\n    const [error, setError] = useState(\"\")\n\n    useEffect(() => {\n        const a = userSession ? navigate('/') : \"\"\n    })\n\n    useEffect(() => {\n        if (error != \"\") {\n            const timer = setTimeout(() => {\n                setError(\"\");\n            }, 5000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [error])\n\n    return (\n        <>\n            <div className=\"signInBlock\">\n                <div style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n                            <video autoPlay muted loop style={{\n                                // position: 'absolute',\n                                zIndex: -2,\n                                top: 0,\n                                left: 0,\n                                height: '100%',\n                                objectFit: 'cover',\n                                filter: 'grayscale(100%)'\n                            }}>\n                                <source src={backVideo} type=\"video/mp4\" />\n                                Your browser does not support the video tag.\n                            </video>\n                    </div>\n            {userSession ? navigate('/') : <></>}\n            <div className=\"error-block\" style={{left: error != \"\" ? '20px' : '-500px'}}>\n                    <a>{error}</a>\n            </div>\n            <div className=\"signInPageSection\">\n                \n                <div className=\"title\">\n                    <div>PANDORA</div>\n                    </div>\n\n\n                <SignInForm setError={setError}></SignInForm>\n\n            </div>\n        </div>\n        </>\n        )\n}\n\nexport default SignInPage;"],"names":["_ref","error","setError","navigate","useNavigate","register","handleSubmit","watch","formState","errors","useForm","defaultValues","username","password","handleLogin","data","console","log","authService","login","then","response","request","status","handleErrors","loginOptions","required","minLength","value","message","_jsx","children","_jsxs","name","onSubmit","className","style","backgroundColor","color","type","id","placeholder","Button","onClick","SignInPage","userSession","JSON","parse","localStorage","getItem","useState","useEffect","timer","setTimeout","clearTimeout","_Fragment","position","top","left","width","height","autoPlay","muted","loop","zIndex","objectFit","filter","src","backVideo","SignInForm"],"sourceRoot":""}